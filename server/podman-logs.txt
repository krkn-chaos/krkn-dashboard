+ ROOT_FOLDER=/root
+ KRAKEN_FOLDER=/root/kraken
+ SCENARIO_FOLDER=/root/kraken/scenarios/arcaflow/cpu-hog
+ source /root/main_env.sh
++ export CERBERUS_ENABLED=False
++ CERBERUS_ENABLED=False
++ export CERBERUS_URL=http://0.0.0.0:8080
++ CERBERUS_URL=http://0.0.0.0:8080
++ export KRKN_KUBE_CONFIG=/root/.kube/config
++ KRKN_KUBE_CONFIG=/root/.kube/config
++ export WAIT_DURATION=60
++ WAIT_DURATION=60
++ export ITERATIONS=1
++ ITERATIONS=1
++ export DAEMON_MODE=False
++ DAEMON_MODE=False
++ export RETRY_WAIT=120
++ RETRY_WAIT=120
++ export PUBLISH_KRAKEN_STATUS=False
++ PUBLISH_KRAKEN_STATUS=False
++ export SIGNAL_ADDRESS=0.0.0.0
++ SIGNAL_ADDRESS=0.0.0.0
++ export PORT=8081
++ PORT=8081
++ export SIGNAL_STATE=RUN
++ SIGNAL_STATE=RUN
++ export DEPLOY_DASHBOARDS=False
++ DEPLOY_DASHBOARDS=False
++ export CAPTURE_METRICS=False
++ CAPTURE_METRICS=False
++ export ENABLE_ALERTS=False
++ ENABLE_ALERTS=False
++ export ALERTS_PATH=config/alerts
++ ALERTS_PATH=config/alerts
++ export ES_SERVER=http://0.0.0.0:9200
++ ES_SERVER=http://0.0.0.0:9200
++ export CHECK_CRITICAL_ALERTS=False
++ CHECK_CRITICAL_ALERTS=False
++ export KUBE_BURNER_URL=https://github.com/cloud-bulldozer/kube-burner/releases/download/v1.7.0/kube-burner-1.7.0-Linux-x86_64.tar.gz
++ KUBE_BURNER_URL=https://github.com/cloud-bulldozer/kube-burner/releases/download/v1.7.0/kube-burner-1.7.0-Linux-x86_64.tar.gz
++ export TELEMETRY_ENABLED=False
++ TELEMETRY_ENABLED=False
++ export TELEMETRY_API_URL=https://ulnmf9xv7j.execute-api.us-west-2.amazonaws.com/production
++ TELEMETRY_API_URL=https://ulnmf9xv7j.execute-api.us-west-2.amazonaws.com/production
++ export TELEMETRY_USERNAME=redhat-chaos
++ TELEMETRY_USERNAME=redhat-chaos
++ export TELEMETRY_PASSWORD=
++ TELEMETRY_PASSWORD=
++ export TELEMETRY_PROMETHEUS_BACKUP=True
++ TELEMETRY_PROMETHEUS_BACKUP=True
++ export TELEMTRY_FULL_PROMETHEUS_BACKUP=False
++ TELEMTRY_FULL_PROMETHEUS_BACKUP=False
++ export TELEMETRY_BACKUP_THREADS=5
++ TELEMETRY_BACKUP_THREADS=5
++ export TELEMETRY_ARCHIVE_PATH=/tmp
++ TELEMETRY_ARCHIVE_PATH=/tmp
++ export TELEMETRY_MAX_RETRIES=0
++ TELEMETRY_MAX_RETRIES=0
++ export TELEMETRY_RUN_TAG=chaos
++ TELEMETRY_RUN_TAG=chaos
++ export TELEMETRY_ARCHIVE_SIZE=1000
++ TELEMETRY_ARCHIVE_SIZE=1000
++ export TELEMETRY_LOGS_BACKUP=False
++ TELEMETRY_LOGS_BACKUP=False
++ export 'TELEMETRY_FILTER_PATTERN=["(\\w{3}\\s\\d{1,2}\\s\\d{2}:\\d{2}:\\d{2}\\.\\d+).+","kinit (\\d+/\\d+/\\d+\\s\\d{2}:\\d{2}:\\d{2})\\s+","(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d+Z).+"]'
++ TELEMETRY_FILTER_PATTERN='["(\\w{3}\\s\\d{1,2}\\s\\d{2}:\\d{2}:\\d{2}\\.\\d+).+","kinit (\\d+/\\d+/\\d+\\s\\d{2}:\\d{2}:\\d{2})\\s+","(\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}\\.\\d+Z).+"]'
++ export TELEMETRY_CLI_PATH=
++ TELEMETRY_CLI_PATH=
++ export TELEMETRY_EVENTS_BACKUP=True
++ TELEMETRY_EVENTS_BACKUP=True
++ unset KUBECONFIG
+ source /root/env.sh
++ export TOTAL_CHAOS_DURATION=60
++ TOTAL_CHAOS_DURATION=60
++ export NODE_CPU_CORE=2
++ NODE_CPU_CORE=2
++ export NODE_CPU_PERCENTAGE=50
++ NODE_CPU_PERCENTAGE=50
++ export NAMESPACE=default
++ NAMESPACE=default
++ export NODE_SELECTORS=
++ NODE_SELECTORS=
++ export SCENARIO_TYPE=arcaflow_scenarios
++ SCENARIO_TYPE=arcaflow_scenarios
++ export SCENARIO_FILE=scenarios/arcaflow/cpu-hog/input.yaml
++ SCENARIO_FILE=scenarios/arcaflow/cpu-hog/input.yaml
+ source /root/common_run.sh
+ setup_arcaflow_env /root/kraken/scenarios/arcaflow/cpu-hog
++ which yq
+ YQ=/usr/bin/yq
+ '[' -z /usr/bin/yq ']'
+ echo
+ IFS=';'
+ read -r -a SELECTORS
+ [[ 0 > 0 ]]
+ export SELECTOR=none
+ SELECTOR=none
+ export SELECTOR_VALUE=none
+ SELECTOR_VALUE=none
++ envsubst
+ export 'TEMPLATE=cpu_count: 2
cpu_load_percentage: 50
cpu_method: all
duration: 60
node_selector: 
  none: none
kubeconfig: ""
namespace: default'
+ TEMPLATE='cpu_count: 2
cpu_load_percentage: 50
cpu_method: all
duration: 60
node_selector: 
  none: none
kubeconfig: ""
namespace: default'
++ echo 'cpu_count: 2
cpu_load_percentage: 50
cpu_method: all
duration: 60
node_selector: 
  none: none
kubeconfig: ""
namespace: default'
++ yq e '.node_selector={}'
+ TEMPLATE='cpu_count: 2
cpu_load_percentage: 50
cpu_method: all
duration: 60
node_selector: {}
kubeconfig: ""
namespace: default'
+ /usr/bin/yq e '.input_list += [env(TEMPLATE)]' -i /root/kraken/scenarios/arcaflow/cpu-hog/input.yaml
+ envsubst
+ checks
+ check_oc
+ log 'Checking if OpenShift client is installed'
++ date +%d-%m-%YT%H:%M:%S
[1m25-03-2025T15:43:36 Checking if OpenShift client is installed[0m
+ echo -e '\033[1m25-03-2025T15:43:36 Checking if OpenShift client is installed\033[0m'
+ which oc
/usr/local/bin/oc
+ check_kubectl
+ log 'Checking if kubernetes client is installed'
++ date +%d-%m-%YT%H:%M:%S
[1m25-03-2025T15:43:36 Checking if kubernetes client is installed[0m
+ echo -e '\033[1m25-03-2025T15:43:36 Checking if kubernetes client is installed\033[0m'
+ which kubectl
/usr/local/bin/kubectl
+ check_cluster_version
+ kubectl version
Client Version: version.Info{Major:"1", Minor:"27", GitVersion:"v1.27.4", GitCommit:"33a7a8bcccdd1c7c0e2f51609d832d31232d2f26", GitTreeState:"clean", BuildDate:"2023-12-13T22:07:37Z", GoVersion:"go1.20.10 X:strictfipsruntime", Compiler:"gc", Platform:"linux/amd64"}
Kustomize Version: v5.0.1
WARNING: This version information is deprecated and will be replaced with the output from kubectl version --short.  Use --output=yaml|json to get the full version.
Unable to connect to the server: dial tcp 192.168.49.2:8443: i/o timeout
+ log 'Unable to connect to the cluster, please check if it'\''s up and make sure the KUBECONFIG is set correctly'
++ date +%d-%m-%YT%H:%M:%S
[1m25-03-2025T15:44:07 Unable to connect to the cluster, please check if it's up and make sure the KUBECONFIG is set correctly[0m
+ echo -e '\033[1m25-03-2025T15:44:07 Unable to connect to the cluster, please check if it'\''s up and make sure the KUBECONFIG is set correctly\033[0m'
+ exit 1
